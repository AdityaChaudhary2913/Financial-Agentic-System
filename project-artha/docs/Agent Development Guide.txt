Project Artha: Agent Development Guide
Vision and Foundation
What We're Building
Project Artha represents a fundamental shift in personal finance technology. Instead of generic budgeting apps that treat every user the same, we're creating an AI system that understands the unique complexities of Indian financial life. This system recognizes that your financial decisions are influenced by upcoming festivals, family obligations, cultural patterns, and personal behavioral biases.
Think of Artha as having 11 specialized financial experts working together, each bringing their own expertise but coordinating seamlessly to provide you with advice that's both mathematically sound and culturally intelligent.
The Core Innovation
Traditional financial apps tell you "You spent ₹50K this month." Artha tells you "You spent ₹15K extra due to anchoring bias when gold prices spiked, and you have your cousin's wedding in 6 months requiring ₹80K - let's start a recurring deposit now."
This level of insight requires multiple AI agents working together:
Foundation Tier (Always Active):
* Data Integration Agent: Unifies your scattered financial life across 18+ sources
* Core Financial Advisor: Translates your life dreams into actionable strategies
* Trust & Transparency Agent: Explains every recommendation with complete transparency
Intelligence Tier (Query Triggered):
* Risk Profiling Agent: Detects when you're about to make emotional financial decisions
* Anomaly Detection Agent: Spots unusual patterns before they become problems
* Regional Investment Agent: Knows Pune real estate outperforms Mumbai rental yield for your profile
Strategic Tier (Goal Oriented):
* Market Intelligence Agent: Provides real-time market data and opportunities
* Debt Management Agent: Optimizes loans considering your grandmother's medical needs
* Illiquid Asset Agent: Turns your dormant gold into working capital
* Cultural Events Agent: Budgets for Diwali, weddings, and family obligations
Why This Approach Works
Each agent specializes in one aspect of financial intelligence, but they communicate and coordinate their insights. When you ask "Can I afford a ₹50L home loan?", all agents analyze simultaneously, considering everything from your risk psychology to upcoming festival expenses, delivering a decision that's both mathematically sound and culturally intelligent.
________________




Understanding the Technical Landscape
Google ADK: Your Development Foundation
Google's Agent Development Kit (ADK) provides the infrastructure for building sophisticated multi-agent systems. Think of ADK as the orchestra conductor that allows your financial agents to work together harmoniously.
Key ADK Concepts You Need to Understand:
Agents: Individual AI entities that can think, reason, and take actions. In our system, each agent represents a financial specialist.
Tools: Capabilities that agents can use to gather information or perform actions. For us, this includes connecting to Fi MCP for financial data, making calculations, and generating insights.
Sessions: Persistent conversations that maintain context across multiple interactions. This allows Artha to remember your goals, preferences, and previous advice.
State Management: How information is stored and shared between agents and across conversations.
Fi MCP: Your Financial Data Gateway
Fi Money's Model Context Protocol (MCP) server provides structured access to comprehensive financial data. Instead of manually integrating with dozens of different financial services, MCP gives you a unified interface to access:
* Bank account balances and transactions
* Mutual fund holdings and performance
* EPF (Employee Provident Fund) details
* Credit reports and scores
* Stock portfolios
* Insurance and loan information
Understanding MCP Data Flow:
1. Authentication: Users authenticate once using their phone number
2. Data Consolidation: MCP connects to their various financial accounts
3. Structured Access: Your agents get clean, consistent JSON data
4. Real-time Updates: Information stays current as accounts are updated
The Integration Architecture
Your system sits between these two powerful platforms:
UserQuery → GoogleADKAgents → FiMCPData → CoordinatedAnalysis →PersonalizedAdvice
This architecture allows you to focus on building intelligent financial logic rather than worrying about data integration or agent orchestration.
________________


Core System Architecture
The Three-Tier Agent Design
Understanding our agent architecture is crucial for successful implementation. We organize agents into three tiers based on their function and activation patterns.
Foundation Tier: Always-On Intelligence
These agents run continuously, maintaining your financial state and providing basic intelligence:
Data Integration Agent serves as the foundation of everything else. It continuously synchronizes data from Fi MCP, ensures data quality, and provides other agents with reliable, structured financial information. Think of it as the librarian that keeps all your financial records organized and accessible.
Core Financial Advisor Agent acts as the conductor of the orchestra. It receives user queries, determines which other agents need to be involved, coordinates their responses, and synthesizes everything into coherent advice. This agent understands the big picture of your financial life.
Trust & Transparency Agent ensures every recommendation can be explained and verified. It provides different levels of explanation depth, monitors for potential biases or errors, and maintains complete audit trails of decision-making processes.
Intelligence Tier: Smart Analysis
These agents activate when specific analysis is needed:
Risk Profiling Agent understands your behavioral patterns and biases. It learns from your transaction history to identify when you might make emotional decisions and provides appropriate nudges to keep you on track.
Anomaly Detection Agent monitors for unusual patterns in your financial life. It might notice if you're spending unusually high amounts, if there are suspicious transactions, or if you're falling behind on your financial goals.
Regional Investment Agent provides location-aware financial intelligence. It understands regional economic patterns, local investment opportunities, and how your location affects your financial strategy.
Strategic Tier: Long-term Planning
These agents focus on comprehensive financial planning:
Debt Management Agent optimizes your debt strategy across all types of loans and obligations, including informal family loans and commitments.
Wealth Transfer Agent plans for intergenerational wealth transfer, considering both your current wealth building and future inheritance planning.
Cultural Events Agent understands and plans for Indian cultural financial obligations, from festival expenses to wedding contributions.
Illiquid Asset Agent helps optimize assets like gold, real estate, and other investments that aren't easily liquid.
Market Intelligence Agent provides real-time market data, identifies opportunities, and ensures your agents have current information for decision-making.
Agent Communication Patterns
Parallel Activation: When you ask a complex question like "Should I buy this house?", multiple agents activate simultaneously. The Data Integration Agent fetches your current financial state, the Debt Management Agent analyzes your loan capacity, the Regional Investment Agent evaluates the property market, and the Cultural Events Agent considers upcoming expenses.
Sequential Processing: Some workflows require ordered processing. For example, goal planning might first require the Data Integration Agent to establish your current position, then the Risk Profiling Agent to understand your preferences, then the Core Advisor Agent to create the strategy.
Consensus Building: When agents have different recommendations, the Core Advisor Agent facilitates consensus building, weighing different perspectives based on confidence levels, user preferences, and the specific context of the decision.
Data Flow Architecture
Input Processing: User queries come in through natural language, which the Core Advisor Agent processes to understand intent and determine which agents and data sources are needed.
Data Gathering: The Data Integration Agent coordinates with Fi MCP to fetch relevant financial information, while the Market Intelligence Agent gathers current market data.
Analysis Coordination: Relevant agents perform their specialized analysis in parallel, sharing intermediate results as needed.
Synthesis: The Core Advisor Agent combines insights from all agents into coherent recommendations.
Explanation Generation: The Trust & Transparency Agent ensures every recommendation can be explained at the appropriate level of detail.
State Persistence: All insights, preferences, and decision context are saved for future interactions.
________________


NOTE: 


You need to strictly use the following documents to understand and utilize Google ADK (Agent Development Kit): 
Google ADK - Comprehensive Codes and Technicalities.pdf
Google ADK - Comprehensive Explanations.pdf


For financial data of the user and what the Fi MCP Server is all about, you need to strictly use Fi’s MCP Server’s complete documentation listed below:
Fi MCP Development Server - Ultimate Reference Manual.pdf


Development Strategy: From Simple to Sophisticated
Phase 1 (Completed Successfully) : Foundation
Start with the Absolute Basics
Your first goal is to create a working connection between Google ADK and Fi MCP. Don't worry about sophisticated financial analysis yet - focus on proving that the basic integration works.
Step 1: Set Up Your Development Environment
Begin by ensuring you have the basic tools installed and configured. You'll need Python 3.9+, the Google ADK SDK, and access to the Fi MCP development server.
Step 2: Create Your First Agent
Start with a simple agent that can authenticate with Fi MCP and fetch basic financial data. This agent doesn't need to be smart yet - it just needs to work reliably.
Step 3: Test with Real Data
Use the Fi MCP development server's test data to verify your basic integration works. The development server provides 26 different user scenarios, so test with a few different phone numbers to ensure your code handles various data structures.
Step 4: Add Basic Error Handling
Before moving forward, ensure your basic agent handles common error conditions gracefully. What happens if authentication fails? What if the data is incomplete? Build resilience into your foundation.


Phase 2 (Completed Successfully) : Intelligence
1. Add Your First Smart Agent
Once your basic integration works, add intelligence gradually. Start with one smart agent that provides genuine value.
2. Choose the Risk Profiling Agent as Your First Smart Agent
The Risk Profiling Agent is a good starting point because it can provide immediate value even with basic implementation, and it demonstrates the behavioral intelligence that sets Artha apart.


Phase 3: Sophistication


1. Add Market Intelligence Agent
To make sure all agents receive relevant, updated and correct information, this agent must be able to correctly search the web and fetch the true and latest information pertaining to any query from either an agent or the user. In the upcoming phases, this agent would be connected to almost all other agents as all of them would require some information to be fetched from the internet.
2. Add Trust & Transparency Agent
Ensures ethical, explainable, and user-controlled AI decision-making. Any output containing financial numbers and values should be traceable and explainable. This agent must find how any other agent, against which this is triggered, calculated a value, or gave some specific advice by explaining the maths or the rationale behind it respectively. This agent can and should use the Market Intelligence agent to be able to quote prices of stocks, or explain the history or future of some stock or some mutual fund or any other asset. Verifies and validates all recommendations. The explanation_tiers define four levels of interpretability: summary (Tier 1) gives the actionable insight, rationale (Tier 2) explains why, evidence (Tier 3) supports it with data, and provenance (Tier 4) traces the agentic reasoning path behind the recommendation.
3. Add Regional Intelligence
Implement the Regional Investment Agent to provide location-aware financial advice. This demonstrates Artha's ability to understand context beyond just numbers. Should use the Market Intelligence agent to ask the user for their location and their property investment preferences, and suggest the right possibilities of investment by doing proper web search. Basically it should provide the location specific portfolio recommendations. 
4. Add Financial Anomaly & Early Warning Signal Agent
Continuous monitoring and early detection of financial irregularities in transactions and credit behavior and underutilized opportunities or dormant assets.
5. Add Debt Management Agent
Tracks all liability types, performs predictive credit health management and generates scenarios to help the user create resilience under liability stress.
6. Illiquid Asset Optimizer Agent
Optimization and monetization of illiquid and dormant assets. Maintains a ledger of non liquid holdings(Need to create extra data for this). Shows scenarios of untapped potential of ideal assets.


Phase 4: Amalgamation
1. Implement State Management
Add persistent state so your agents can remember insights across conversations. This is crucial for building the personalized experience that makes Artha powerful.
2. Add Agent Coordination
Now introduce your first multi-agent workflow. Create a simple coordinator that can call both your basic data agent and your risk profiling agent, then combine their insights.
Phase 5: System Finalization
1. Build Consensus Mechanisms
As you add more agents, you need robust ways for them to coordinate and resolve conflicts between different recommendations. All outputs from agents must be fused using a weighted consensus protocol before advice is shown to the user. If two agents’ recommendations differ significantly (e.g., >30% weight difference), a resolution subroutine should run: 1) Query both agents for rationale and evidence. 2) Apply context: e.g., if user risk profile or regional constraint favors one view. 3) If deadlock, escalate to the Trust Agent or prompt human intervention.
2. Core Financial Advisor Agent - "Life Goals Orchestrator"
Synthesizes inputs from all agents to translate life aspirations into actionable financial strategies. Utilizes the consensus mechanism which was implemented in the previous section. 
Phase 6: Production Readiness
Add Comprehensive Error Handling
Implement circuit breakers, retry logic, and graceful degradation to ensure your system works reliably even when individual components fail.
Implement Security Best Practices
Add encryption for sensitive data, audit logging for compliance, and access controls to protect user information.
Performance Optimization
Add caching, connection pooling, and other optimizations to ensure your system can handle multiple users efficiently.
Testing Framework
Build comprehensive tests that verify not just that your code works, but that it provides accurate financial advice.